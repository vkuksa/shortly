version: '3'

networks:
  shortly:
    driver: bridge

services:
  shortlyd:
    build:
      context: ./../../../..
      dockerfile: ./cmd/shortlyd/deploy/Dockerfile
    restart: on-failure
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '1'
          memory: '64M'
    ports:
      - 8080:8080
      - 6060:6060
    env_file: .env
    networks:
      - shortly
    # depends_on:
    #   - redis

  # prometheus:
  #   image: prom/prometheus
  #   ports:
  #     - 9090:9090
  #   restart: unless-stopped
  #   volumes:
  #     - ./cmd/shortlyd/deploy/prom:/etc/prometheus
  #     - prometheus-data:/prometheus
  #   command:
  #     - --config.file=/etc/prometheus/prometheus.yml
  #   depends_on:
  #     - shortlyd
  #   networks:
  #     - shortly

  # grafana:
  #   image: grafana/grafana
  #   ports:
  #     - 3000:3000
  #   restart: unless-stopped
  #   volumes:
  #     - ./cmd/shortlyd/deploy/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
  #     - grafana-data:/var/lib/grafana
  #   depends_on:
  #     - prometheus
  #   networks:
  #     - shortly

  # alertmanager:
  #     image: prom/alertmanager
  #     ports:
  #       - 9093:9093
  #     restart: unless-stopped
  #     volumes:
  #       - ./cmd/shortlyd/deploy/prom:/etc/prometheus
  #       - alertmanager-data:/data
  #     command: --config.file=/etc/prometheus/alertmanager.yml --log.level=debug
  #     depends_on:
  #       - shortly

  # redis:
  #   image: redis
  #   ports:
  #     - 6379:6379
  #   volumes:
  #     - redis-data:/data
  #   restart: on-failure
  #   networks:
  #     - shortly

volumes:
  grafana-data: 
  prometheus-data: 
  alertmanager-data: 
  redis-data: